version: '3.8'

services:
#  web:
#    build:
#      context: ./assignment1
#      dockerfile: Dockerfile.prod
#    command: gunicorn assignment1.asgi:application --bind 0.0.0.0:8000
#    expose:
#      - 8000
#    env_file:
#      - ./.env.staging
#    depends_on:
#      - db
  db:
    image: postgres:15.0-alpine3.16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=My1DB2Pass
      - POSTGRES_DB=db
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - daphne

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  redis:
    image: redis:5
    ports:
      - "6379:6379"
  daphne:
    build:
      context: ./assignment1
      dockerfile: Dockerfile.daphne
    image: tbeadle/daphne:1.3.0
    command: daphne -b 0.0.0.0 -p 8000 assignment1.asgi:application
    ports:
      - "8000:8000"
    env_file:
      - ./.env.staging
    depends_on:
      - redis
    links:
      - redis

volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme: