# pull official base image
FROM python:3.9.6-alpine as builder

# set work directory
WORKDIR /usr/src/assignment1

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip

COPY ./requirements.txt .
RUN pip wheel --wheel-dir /usr/src/assignment1/wheels -r requirements.txt

# copy entrypoint.sh
COPY ./entrypoint.sh .
RUN sed -i 's/\r$//g' /usr/src/assignment1/entrypoint.sh
RUN chmod +x /usr/src/assignment1/entrypoint.sh

# copy project
COPY . .

ENTRYPOINT ["/usr/src/assignment1/entrypoint.sh"]


# pull official base image
FROM python:3.9.6-alpine

# create directory for the app user
RUN mkdir -p /home/assignment1

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/assignment1
ENV APP_HOME=/home/assignment1/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/assignment1/wheels /wheels
COPY --from=builder /usr/src/assignment1/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/assignment1/web/entrypoint.prod.sh"]

CMD ["--proxy-headers"]